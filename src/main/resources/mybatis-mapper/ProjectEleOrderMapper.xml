<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bit.module.manager.dao.ProjectEleOrderDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.bit.module.manager.bean.ProjectEleOrder" id="projectEleOrderMap">
        <result property="id" column="id"/>
        <result property="projectId" column="project_id"/>
        <result property="elevatorTypeId" column="elevator_type_id"/>
        <result property="elevatorTypeName" column="elevator_type_name"/>
        <result property="basePrice" column="base_price"/>
        <result property="additionPrice" column="addition_price"/>
        <result property="num" column="num"/>
        <result property="unitPrice" column="unit_price"/>
        <result property="installPrice" column="install_price"/>
        <result property="transportPrice" column="transport_price"/>
        <result property="singleTotalPrice" column="single_total_price"/>
        <result property="totalPrice" column="total_price"/>
        <result property="versionId" column="version_id"/>
        <result property="rate" column="rate"/>
        <result property="standard" column="standard"/>
        <result property="standardName" column="standard_name"/>
        <result property="calculateFlag" column="calculate_flag"/>
        <result property="costBasePrice" column="cost_base_price"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
          id,
          project_id,
          elevator_type_id,
          elevator_type_name,
          num,
          base_price,
          addition_price,
          unit_price,
          install_price,
          transport_price,
          single_total_price,
          total_price,
          version_id,
          rate,
          standard,
          standard_name,
          calculate_flag,
          cost_base_price

    </sql>
    <!--批量添加-->
    <insert id="batchInsert" parameterType="com.bit.module.manager.bean.ProjectEleOrder" keyProperty="id"
            useGeneratedKeys="true">
        INSERT INTO t_project_ele_order(
        project_id,
        elevator_type_id,
        elevator_type_name,
        num,
        unit_price,
        install_price,
        transport_price,
        single_total_price,
        total_price,
        version_id,
        rate,
        standard,
        standard_name,
        calculate_flag,
        cost_base_price
        ) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{projectId,jdbcType=BIGINT},
            #{elevatorTypeId,jdbcType=BIGINT},
            #{elevatorTypeName,jdbcType=VARCHAR},
            #{num,jdbcType=INTEGER},
            #{unitPrice,jdbcType=VARCHAR},
            #{installPrice,jdbcType=VARCHAR},
            #{transportPrice,jdbcType=VARCHAR},
            #{singleTotalPrice,jdbcType=VARCHAR},
            #{totalPrice,jdbcType=VARCHAR},
            #{versionId,jdbcType=BIGINT},
            #{rate,jdbcType=DOUBLE},
            #{standard,jdbcType=INTEGER},
            #{standardName,jdbcType=VARCHAR},
            #{calculateFlag,jdbcType=VARCHAR},
            #{costBasePrice,jdbcType=VARCHAR}

            )
        </foreach>
    </insert>


    <!-- 多参数查询数据 -->
    <select id="findByParam" parameterType="com.bit.module.manager.bean.ProjectEleOrder" resultMap="projectEleOrderMap">
        select
        <include refid="Base_Column_List"/>
        from t_project_ele_order
        <where>
            <if test="projectId!=null">
                and project_id = #{projectId,jdbcType=BIGINT}
            </if>
            <if test="elevatorTypeId!=null">
                and elevator_type_id = #{elevatorTypeId,jdbcType=BIGINT}
            </if>
            <if test="elevatorTypeName!=null and elevatorTypeName!=''">
                and elevator_type_name = #{elevatorTypeName,jdbcType=VARCHAR}
            </if>
            <if test="num!=null">
                and num = #{num,jdbcType=INTEGER}
            </if>
            <if test="unitPrice!=null and unitPrice!=''">
                and unit_price = #{unitPrice,jdbcType=VARCHAR}
            </if>
            <if test="installPrice!=null and installPrice!=''">
                and install_price = #{installPrice,jdbcType=VARCHAR}
            </if>
            <if test="transportPrice!=null and transportPrice!=''">
                and transport_price = #{transportPrice,jdbcType=VARCHAR}
            </if>
            <if test="singleTotalPrice!=null and singleTotalPrice!=''">
                and single_total_price = #{singleTotalPrice,jdbcType=VARCHAR}
            </if>
            <if test="totalPrice!=null and totalPrice!=''">
                and total_price = #{totalPrice,jdbcType=VARCHAR}
            </if>
            <if test="versionId!=null">
                and version_id = #{versionId,jdbcType=BIGINT}
            </if>
            <if test="standard!=null">
                and standard = #{standard,jdbcType=INTEGER}
            </if>
        </where>
    </select>


    <select id="getPriceVersionByOrderId" parameterType="long" resultType="integer">
        SELECT t2.version FROM t_project_ele_order t1
        INNER JOIN t_project_price t2
        on t1.version_id = t2.id
        <where>
            <if test="orderId!=null">
                t1.id = #{orderId,jdbcType=BIGINT}
            </if>
        </where>

    </select>


    <!--批量编辑数据-->
    <update id="updateBatchEleOrder" parameterType="com.bit.module.manager.bean.ProjectEleOrder">
        UPDATE t_project_ele_order
        <trim prefix="set" suffixOverrides=",">

            <trim prefix="install_price = case" suffix="end,">
                <foreach collection="list" item="order" index="index">
                    <if test="order.installPrice!=null">
                        WHEN id = #{order.id,jdbcType=BIGINT} then #{order.installPrice,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="transport_price = case" suffix="end,">
                <foreach collection="list" item="order" index="index">
                    <if test="order.transportPrice!=null">
                        WHEN id = #{order.id,jdbcType=BIGINT} then #{order.transportPrice,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="calculate_flag = case" suffix="end,">
                <foreach collection="list" item="order" index="index">
                    <if test="order.calculateFlag!=null">
                        WHEN id = #{order.id,jdbcType=BIGINT} then #{order.calculateFlag,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
        </trim>
        <where>
            <foreach collection="list" item="order" index="index" separator=") or (" close=")" open="(">
                id = #{order.id,jdbcType=BIGINT}
            </foreach>

        </where>
    </update>

    <update id="updateBatch" parameterType="java.util.List">

        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update t_project_ele_order
            <set>
                <if test="item.rate != null" >
                  rate = #{item.rate,jdbcType=DOUBLE },
                </if>
            </set>
            where id = #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>


  <!--  <update id="updateBatch" parameterType="java.util.List" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update standard_relation
            <set >
                <if test="item.standardFromUuid != null" >
                    standard_from_uuid = #{item.standardFromUuid,jdbcType=VARCHAR},
                </if>
                <if test="item.standardToUuid != null" >
                    standard_to_uuid = #{item.standardToUuid,jdbcType=VARCHAR},
                </if>
                <if test="item.gmtModified != null" >
                    gmt_modified = #{item.gmtModified,jdbcType=TIMESTAMP},
                </if>
            </set>
            where id = #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>-->
</mapper>